
#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>
#include <algorithm>

// Speciﬁcation C1 - Const Conversions
const double SEA_LEVEL_RISE_PER_YEAR_MM = 3.1; 
const double SEA_LEVEL_RISE_LAST_CENTURY_MM = 1.8; 
const double TEMPERATURE_INCREASE_RATE_FAHRENHEIT = 0.13; 
const double MILLIMETERS_TO_INCHES = 0.03937; 
const double FAHRENHEIT_TO_CELSIUS = 5.0 / 9.0; 
const int NUMBER_OF_YEARS_TO_PROJECT = 5; 

// Speciﬁcation A3 - One Function 
void displayProgramGreetingMessage();
void displayAutoGeneratedHeader(const std::string &headerTitle);
void calculateAndDisplaySeaLevelRiseOverYears();
void calculateAndDisplayTemperatureIncreaseOverYears();
void displayMeanTemperatureForEachYear();
void displayFinalTemperatures();
void displayFinalOceanLevel();

int main() {
    // Program greeting
    displayProgramGreetingMessage();

    displayAutoGeneratedHeader("Ocean Rise Over the Next 5 Years");
    calculateAndDisplaySeaLevelRiseOverYears();

    displayAutoGeneratedHeader("Projected Temperature Increase Over the Next 5 Years");
    calculateAndDisplayTemperatureIncreaseOverYears();

    displayAutoGeneratedHeader("Mean Temperature for Each Year");
    displayMeanTemperatureForEachYear();

    displayAutoGeneratedHeader("Final Temperatures After 5 Years");
    displayFinalTemperatures();

    displayAutoGeneratedHeader("Final Ocean Level After 5 Years");
    displayFinalOceanLevel();

    return 0;
}

// Program greeting function
void displayProgramGreetingMessage() {
    std::cout << "Hi, this is my function to display my introduction." << std::endl;
    
}

// Speciﬁcation B3 - Auto Heading Function
void displayAutoGeneratedHeader(const std::string &headerTitle) {
    std::string uppercaseHeaderTitle = headerTitle;
    std::transform(uppercaseHeaderTitle.begin(), uppercaseHeaderTitle.end(), uppercaseHeaderTitle.begin(), ::toupper); //found this function on stackexchange. 
    std::cout << uppercaseHeaderTitle << std::endl;
    std::cout << std::string(uppercaseHeaderTitle.length(), '=') << std::endl;
}

// Specification A1 - Ocean Rise Table
// Specification B1 - Mixed Length Output
void calculateAndDisplaySeaLevelRiseOverYears() {
    std::cout << std::fixed << std::setprecision(3);
    std::cout << "| Year | Ocean Level Rise (mm) | Ocean Level Rise (in) |" << std::endl;
    std::cout << "|------|-----------------------|-----------------------|" << std::endl;
    // Speciﬁcation C2 - 5 year ocean rise
    double seaLevelRiseInMillimeters = SEA_LEVEL_RISE_LAST_CENTURY_MM;
    for (int yearIndex = 1; yearIndex <= NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        seaLevelRiseInMillimeters += SEA_LEVEL_RISE_PER_YEAR_MM;
        double seaLevelRiseInInches = seaLevelRiseInMillimeters * MILLIMETERS_TO_INCHES;
        std::cout << "| " << 2025 + yearIndex - 1 << " | " << seaLevelRiseInMillimeters << "                 | " << seaLevelRiseInInches << "                 |" << std::endl;
    }
    std::cout << "|------|-----------------------|-----------------------|\n" << std::endl;
}


// Specification B2 - Mixed Temperature Output
void calculateAndDisplayTemperatureIncreaseOverYears() {
    double newYorkCityTemperature = 85.0;
    double denverTemperature = 88.0;
    double phoenixTemperature = 106.0;
    double sacramentoTemperature = 92.0;

    std::cout << std::fixed << std::setprecision(3);

    // Specification A2 - July Temp Table
    std::cout << "\n| Sacramento                  |" << std::endl;
    std::cout << "| Year | Fahrenheit | Celsius |" << std::endl;
    std::cout << "|------|------------|---------|" << std::endl;
    for (int yearIndex = 0; yearIndex < NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        double sacramentoCelsius = (sacramentoTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
        std::cout << "| " << 2025 + yearIndex << " | " << sacramentoTemperature << "     | " << sacramentoCelsius << "  |" << std::endl;
        sacramentoTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
    }
    std::cout << "|------|------------|---------|\n" << std::endl;

    std::cout << "\n| New York City               |" << std::endl;
    std::cout << "| Year | Fahrenheit | Celsius |" << std::endl;
    std::cout << "|------|------------|---------|" << std::endl;
    for (int yearIndex = 0; yearIndex < NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        double newYorkCityCelsius = (newYorkCityTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
        std::cout << "| " << 2025 + yearIndex << " | " << newYorkCityTemperature << "     | " << newYorkCityCelsius << "  |" << std::endl;
        newYorkCityTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
    }
    std::cout << "|------|------------|---------|\n" << std::endl;

    std::cout << "\n| Denver                      |" << std::endl;
    std::cout << "| Year | Fahrenheit | Celsius |" << std::endl;
    std::cout << "|------|------------|---------|" << std::endl;
    for (int yearIndex = 0; yearIndex < NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        double denverCelsius = (denverTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
        std::cout << "| " << 2025 + yearIndex << " | " << denverTemperature << "     | " << denverCelsius << "  |" << std::endl;
        denverTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
    }
    std::cout << "|------|------------|---------|\n" << std::endl;

    std::cout << "\n| Phoenix                     |" << std::endl;
    std::cout << "| Year | Fahrenheit | Celsius |" << std::endl;
    std::cout << "|------|------------|---------|" << std::endl;
    for (int yearIndex = 0; yearIndex < NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        double phoenixCelsius = (phoenixTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
        std::cout << "| " << 2025 + yearIndex << " | " << phoenixTemperature << "    | " << phoenixCelsius << "  |" << std::endl;
        phoenixTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
    }
    std::cout << "|------|------------|---------|\n" << std::endl;
}

//Specification C3 - 5 year temp
void displayMeanTemperatureForEachYear() {
    double newYorkCityTemperature = 85.0;
    double denverTemperature = 88.0;
    double phoenixTemperature = 106.0;
    double sacramentoTemperature = 92.0;

    std::cout << "| Year | Mean Temperature (F) | Mean Temperature (C) |" << std::endl;
    std::cout << "|------|----------------------|----------------------|" << std::endl;
    for (int yearIndex = 0; yearIndex < NUMBER_OF_YEARS_TO_PROJECT; ++yearIndex) {
        double meanTemperatureF = (newYorkCityTemperature + denverTemperature + phoenixTemperature + sacramentoTemperature) / 4;
        double meanTemperatureC = (meanTemperatureF - 32) * FAHRENHEIT_TO_CELSIUS;
        std::cout << "| " << 2025 + yearIndex << " | " << meanTemperatureF << "               | " << meanTemperatureC << "               |" << std::endl;

        newYorkCityTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
        denverTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
        phoenixTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
        sacramentoTemperature += TEMPERATURE_INCREASE_RATE_FAHRENHEIT;
    }
    std::cout << "|------|----------------------|----------------------|\n" << std::endl;
}

// Display Final Temperatures After 5 Years
void displayFinalTemperatures() {
    double newYorkCityTemperature = 85.0 + TEMPERATURE_INCREASE_RATE_FAHRENHEIT * NUMBER_OF_YEARS_TO_PROJECT;
    double denverTemperature = 88.0 + TEMPERATURE_INCREASE_RATE_FAHRENHEIT * NUMBER_OF_YEARS_TO_PROJECT;
    double phoenixTemperature = 106.0 + TEMPERATURE_INCREASE_RATE_FAHRENHEIT * NUMBER_OF_YEARS_TO_PROJECT;
    double sacramentoTemperature = 92.0 + TEMPERATURE_INCREASE_RATE_FAHRENHEIT * NUMBER_OF_YEARS_TO_PROJECT;

    double newYorkCityCelsius = (newYorkCityTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
    double denverCelsius = (denverTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
    double phoenixCelsius = (phoenixTemperature - 32) * FAHRENHEIT_TO_CELSIUS;
    double sacramentoCelsius = (sacramentoTemperature - 32) * FAHRENHEIT_TO_CELSIUS;

    std::cout << "| City         | Fahrenheit | Celsius |" << std::endl;
    std::cout << "|--------------|------------|---------|" << std::endl;
    std::cout << "| New York City| " << newYorkCityTemperature << "     | " << newYorkCityCelsius << "  |" << std::endl;
    std::cout << "| Denver       | " << denverTemperature << "     | " << denverCelsius << "  |" << std::endl;
    std::cout << "| Phoenix      | " << phoenixTemperature << "    | " << phoenixCelsius << "  |" << std::endl;
    std::cout << "| Sacramento   | " << sacramentoTemperature << "     | " << sacramentoCelsius << "  |" << std::endl;
    std::cout << "|--------------|------------|---------|\n" << std::endl;
}

//Specification A1 - Ocean Rise Table
void displayFinalOceanLevel() {
    double finalOceanLevelMm = SEA_LEVEL_RISE_LAST_CENTURY_MM + SEA_LEVEL_RISE_PER_YEAR_MM * NUMBER_OF_YEARS_TO_PROJECT;
    double finalOceanLevelIn = finalOceanLevelMm * MILLIMETERS_TO_INCHES;

    std::cout << "| Final Ocean Level (mm) | Final Ocean Level (in)|" << std::endl;
    std::cout << "|-----------------------|------------------------|" << std::endl;
    std::cout << "| " << finalOceanLevelMm << "                | " << finalOceanLevelIn << "                  |" << std::endl;
    std::cout << "|-----------------------|------------------------|\n" << std::endl;
}

